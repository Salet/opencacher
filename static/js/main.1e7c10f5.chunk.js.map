{"version":3,"sources":["services/constants.ts","services/caches.ts","helpers/geolocation.ts","pages/nearby/nearby.tsx","pages/details/details.tsx","pages/app/app.tsx","serviceWorker.ts","index.tsx"],"names":["API_URL","CachesService","geopoint","URL","concat","latitude","longitude","fetch","then","response","json","codes","join","calculateGeoPointMeterDistance","a","b","latitudeDistance","Math","PI","longitudeDistance","haversine","sin","cos","atan2","sqrt","Nearby","props","state","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cachesService","nearestCodes","nearestDetails","fetchCachesNearest","geolocation","handleCachesNearest","bind","assertThisInitialized","prevProps","setState","results","fetchCachesDetails","handleCachesDetails","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","code","value","push","objectSpread","distance","location","split","err","return","cache","_this2","react_default","createElement","className","onClick","onCacheClick","name","round","type","rating","size2","terrain","recommendations","_this3","map","renderCache","Component","EMPTY_CACHE","status","difficulty","Details","App","page","currentCache","geolocationReliable","geolocationObject","navigator","geolocationEnabled","accuracy","orientationReliable","orientationRelativeEvents","window","orientationAbsoluteEvents","orientation","absolute","alpha","beta","gamma","webkitCompassHeading","addEventListener","handleOrientationEvent","getCurrentPosition","handlePositionEvent","enableHighAccuracy","event","toFixed","position","coords","setPage","href","JSON","stringify","nearby_Nearby","handleCacheClick","details_Details","Boolean","hostname","match","ReactDOM","render","app_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e7c10f5.chunk.js","sourcesContent":["export const API_URL = \"https://opencaching.pl/okapi/\";\r\nexport const CONSUMER_KEY = \"?consumer_key=8v5yBJfdTpcsxEnzUPah\";\r\n","import { API_URL, CONSUMER_KEY } from \"./constants\";\r\nimport { Geopoint } from \"../interfaces/geolocation\";\r\nimport { CacheDetails } from \"../interfaces/caches\";\r\n\r\nexport interface CachesDetailsResponse {\r\n  [code: string]: CacheDetails;\r\n}\r\n\r\nexport interface CachesNearestResponse {\r\n  results: Array<string>;\r\n}\r\n\r\nexport default class CachesService {\r\n  fetchCachesNearest(geopoint: Geopoint): Promise<CachesNearestResponse> {\r\n    const ENDPOINT = \"services/caches/search/nearest\";\r\n    const URL = `${API_URL}${ENDPOINT}${CONSUMER_KEY}&center=${\r\n      geopoint.latitude\r\n    }|${geopoint.longitude}`;\r\n    return fetch(URL).then(response => response.json());\r\n  }\r\n\r\n  fetchCachesDetails(codes: Array<string>): Promise<CachesDetailsResponse> {\r\n    const ENDPOINT = \"services/caches/geocaches\";\r\n    const URL = `${API_URL}${ENDPOINT}${CONSUMER_KEY}&cache_codes=${codes.join(\r\n      \"|\"\r\n    )}&fields=code|name|location|type|status|size2|difficulty|terrain|rating|recommendations`;\r\n    return fetch(URL).then(response => response.json());\r\n  }\r\n}\r\n","import { Geopoint } from \"../interfaces/geolocation\";\r\n\r\nexport function calculateGeoPointMeterDistance(\r\n  a: Geopoint,\r\n  b: Geopoint\r\n): number {\r\n  let latitudeDistance =\r\n    (b.latitude * Math.PI) / 180 - (a.latitude * Math.PI) / 180;\r\n  let longitudeDistance =\r\n    (b.longitude * Math.PI) / 180 - (a.longitude * Math.PI) / 180;\r\n  let haversine =\r\n    Math.sin(latitudeDistance / 2) * Math.sin(latitudeDistance / 2) +\r\n    Math.cos((a.latitude * Math.PI) / 180) *\r\n      Math.cos((b.latitude * Math.PI) / 180) *\r\n      Math.sin(longitudeDistance / 2) *\r\n      Math.sin(longitudeDistance / 2);\r\n  return (\r\n    6378.137 *\r\n    2 *\r\n    Math.atan2(Math.sqrt(haversine), Math.sqrt(1 - haversine)) *\r\n    1000\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Geolocation } from \"../../interfaces/geolocation\";\r\nimport { CacheDetailsWithDistance } from \"../../interfaces/caches\";\r\nimport CachesService, {\r\n  CachesNearestResponse,\r\n  CachesDetailsResponse\r\n} from \"../../services/caches\";\r\nimport { calculateGeoPointMeterDistance } from \"../../helpers/geolocation\";\r\nimport \"./nearby.css\";\r\n\r\ninterface NearbyProps {\r\n  geolocation: Geolocation;\r\n  onCacheClick: Function;\r\n}\r\n\r\ninterface NearbyState {\r\n  nearestCodes: Array<string>;\r\n  nearestDetails: Array<CacheDetailsWithDistance>;\r\n}\r\n\r\nexport default class Nearby extends Component<NearbyProps, NearbyState> {\r\n  cachesService = new CachesService();\r\n\r\n  constructor(props: NearbyProps, state: NearbyState) {\r\n    super(props, state);\r\n    this.state = {\r\n      nearestCodes: [],\r\n      nearestDetails: []\r\n    };\r\n    this.cachesService\r\n      .fetchCachesNearest(this.props.geolocation)\r\n      .then(this.handleCachesNearest.bind(this));\r\n  }\r\n\r\n  componentDidUpdate(prevProps: NearbyProps) {\r\n    if (this.props.geolocation.latitude !== prevProps.geolocation.latitude) {\r\n      this.cachesService\r\n        .fetchCachesNearest(this.props.geolocation)\r\n        .then(this.handleCachesNearest.bind(this));\r\n    }\r\n  }\r\n\r\n  handleCachesNearest(response: CachesNearestResponse): void {\r\n    this.setState({ nearestCodes: response.results });\r\n    this.cachesService\r\n      .fetchCachesDetails(this.state.nearestCodes)\r\n      .then(this.handleCachesDetails.bind(this));\r\n  }\r\n\r\n  handleCachesDetails(response: CachesDetailsResponse): void {\r\n    let nearestDetails = [];\r\n    for (let code of this.state.nearestCodes) {\r\n      nearestDetails.push({\r\n        distance: response[code].location\r\n          ? calculateGeoPointMeterDistance(\r\n              {\r\n                latitude: this.props.geolocation.latitude,\r\n                longitude: this.props.geolocation.longitude\r\n              },\r\n              {\r\n                latitude: +response[code].location.split(\"|\")[0] | 0,\r\n                longitude: +response[code].location.split(\"|\")[1] | 0\r\n              }\r\n            )\r\n          : 100000,\r\n        ...(response[code] as CacheDetailsWithDistance)\r\n      });\r\n    }\r\n    this.setState({ nearestDetails: nearestDetails });\r\n  }\r\n\r\n  renderCache(cache: any) {\r\n    return (\r\n      <div\r\n        className=\"Nearby-cache\"\r\n        onClick={() => {\r\n          this.props.onCacheClick(cache);\r\n        }}\r\n      >\r\n        <h3>{cache.name}</h3>\r\n        <p>\r\n          Dystans: ~{Math.round(cache.distance)}m | Typ: {cache.type} | Ocena:{\" \"}\r\n          {cache.rating} | Rozmiar: {cache.size2} | Teren: {cache.terrain} |\r\n          Rekomendacje: {cache.recommendations}\r\n        </p>\r\n        <hr className=\"Nearby-separator\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Nearby\">\r\n        {this.state.nearestDetails.map(cache => this.renderCache(cache))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { CacheDetailsWithDistance } from \"../../interfaces/caches\";\r\n\r\ninterface DetailsProps {\r\n  cache: CacheDetailsWithDistance | null;\r\n}\r\n\r\ninterface DetailsState {\r\n  cache: CacheDetailsWithDistance;\r\n}\r\n\r\nconst EMPTY_CACHE = {\r\n  distance: 0,\r\n  code: \"\",\r\n  name: \"\",\r\n  location: \"\",\r\n  status: \"\",\r\n  type: \"\",\r\n  size2: \"\",\r\n  difficulty: 0,\r\n  terrain: 0,\r\n  rating: 0,\r\n  recommendations: 0\r\n};\r\n\r\nexport default class Details extends Component<DetailsProps, DetailsState> {\r\n  constructor(props: DetailsProps) {\r\n    super(props);\r\n    this.state = {\r\n      cache: EMPTY_CACHE\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ cache: this.props.cache || EMPTY_CACHE });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state.cache.name}</h3>\r\n        <h5>{this.state.cache.code}</h5>\r\n        <br />\r\n        <p>Status: {this.state.cache.status}</p>\r\n        <p>Typ: {this.state.cache.type}</p>\r\n        <p>Dystans: ~{Math.round(this.state.cache.distance)}m</p>\r\n        <p>Lokacja: {this.state.cache.location.split(\"|\").join(\" \")}</p>\r\n        <br />\r\n        <p>Ocena: {this.state.cache.rating}/5</p>\r\n        <p>Rekomendacje: {this.state.cache.recommendations}</p>\r\n        <br />\r\n        <p>Rozmiar: {this.state.cache.size2}</p>\r\n        <p>Trudność: {this.state.cache.difficulty}/5</p>\r\n        <p>Teren: {this.state.cache.terrain}/5</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./app.css\";\r\nimport Nearby from \"../nearby/nearby\";\r\nimport Details from \"../details/details\";\r\nimport { Geolocation } from \"../../interfaces/geolocation\";\r\nimport { CacheDetailsWithDistance } from \"../../interfaces/caches\";\r\n\r\ntype Pages = \"nearby\" | \"details\" | \"debug\";\r\n\r\ninterface Orientation {\r\n  absolute: boolean;\r\n  alpha: number;\r\n  beta: number;\r\n  gamma: number;\r\n  webkitCompassHeading: number;\r\n}\r\n\r\ninterface AppState {\r\n  page: Pages;\r\n  currentCache: CacheDetailsWithDistance | null;\r\n  geolocationReliable: boolean;\r\n  geolocationObject: boolean;\r\n  geolocationEnabled: boolean;\r\n  geolocation: Geolocation;\r\n  orientationReliable: boolean;\r\n  orientationRelativeEvents: boolean;\r\n  orientationAbsoluteEvents: boolean;\r\n  orientation: Orientation;\r\n}\r\n\r\nexport default class App extends Component<any, AppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      page: \"nearby\",\r\n      currentCache: null,\r\n      geolocationReliable: false,\r\n      geolocationObject: !!navigator.geolocation,\r\n      geolocationEnabled: false,\r\n      geolocation: {\r\n        latitude: 0,\r\n        longitude: 0,\r\n        accuracy: 0\r\n      },\r\n      orientationReliable: false,\r\n      orientationRelativeEvents: \"ondeviceorientation\" in window,\r\n      orientationAbsoluteEvents: \"ondeviceorientationabsolute\" in window,\r\n      orientation: {\r\n        absolute: false,\r\n        alpha: 0,\r\n        beta: 0,\r\n        gamma: 0,\r\n        webkitCompassHeading: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.addEventListener(\r\n      this.state.orientationAbsoluteEvents\r\n        ? \"deviceorientationabsolute\"\r\n        : \"deviceorientation\",\r\n      this.handleOrientationEvent.bind(this),\r\n      true\r\n    );\r\n\r\n    if (this.state.geolocationObject) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        this.handlePositionEvent.bind(this),\r\n        () => {},\r\n        { enableHighAccuracy: true }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleOrientationEvent(event: any) {\r\n    if (!this.state.orientationReliable) {\r\n      this.setState({\r\n        orientationReliable:\r\n          !!event.webkitCompassHeading || (event.absolute && !!event.alpha)\r\n      });\r\n    }\r\n    this.setState({\r\n      orientation: {\r\n        absolute: event.absolute || false,\r\n        alpha: +(event.alpha || 0).toFixed(2),\r\n        beta: +(event.beta || 0).toFixed(2),\r\n        gamma: +(event.gamma || 0).toFixed(2),\r\n        webkitCompassHeading: +(event.webkitCompassHeading || 0).toFixed(2)\r\n      }\r\n    });\r\n  }\r\n\r\n  handlePositionEvent(position: Position) {\r\n    if (!this.state.geolocationEnabled) {\r\n      this.setState({ geolocationEnabled: true });\r\n    }\r\n    if (!this.state.geolocationReliable) {\r\n      this.setState({\r\n        geolocationReliable:\r\n          !!position.coords.latitude || !!position.coords.longitude\r\n      });\r\n    }\r\n    this.setState({\r\n      geolocation: {\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n        accuracy: position.coords.accuracy\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCacheClick(currentCache: CacheDetailsWithDistance) {\r\n    this.setState({ currentCache });\r\n    this.setPage(\"details\");\r\n  }\r\n\r\n  setPage(page: Pages) {\r\n    this.setState({ page });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Opencacher</h1>\r\n        <div className=\"App-menu\">\r\n          <a href=\"#\" onClick={this.setPage.bind(this, \"nearby\")}>\r\n            Nearby\r\n          </a>{\" \"}\r\n          |&nbsp;\r\n          <a href=\"#\" onClick={this.setPage.bind(this, \"debug\")}>\r\n            Debug info\r\n          </a>\r\n        </div>\r\n\r\n        {this.state.page == \"debug\" && (\r\n          <div>\r\n            <p>\r\n              Geolocation object: {this.state.geolocationObject ? \"yes\" : \"no\"}\r\n            </p>\r\n            <p>\r\n              Geolocation enabled:{\" \"}\r\n              {this.state.geolocationEnabled ? \"yes\" : \"no\"}\r\n            </p>\r\n            <p>Geolocation reading: {JSON.stringify(this.state.geolocation)}</p>\r\n            <b>\r\n              Geolocation reliable:{\" \"}\r\n              {this.state.geolocationReliable ? \"yes\" : \"no\"}\r\n            </b>\r\n            <p>-----</p>\r\n            <p>\r\n              Orientation relative events:{\" \"}\r\n              {this.state.orientationRelativeEvents ? \"yes\" : \"no\"}\r\n            </p>\r\n            <p>\r\n              Orientation absolute events:{\" \"}\r\n              {this.state.orientationAbsoluteEvents ? \"yes\" : \"no\"}\r\n            </p>\r\n            <p>\r\n              Orientation webkit events:{\" \"}\r\n              {!!this.state.orientation.webkitCompassHeading ? \"yes\" : \"no\"}\r\n            </p>\r\n            <p>Orientation reading: {JSON.stringify(this.state.orientation)}</p>\r\n            <b>\r\n              Orientation reliable:{\" \"}\r\n              {this.state.orientationReliable ? \"yes\" : \"no\"}\r\n            </b>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.page == \"nearby\" && (\r\n          <Nearby\r\n            geolocation={this.state.geolocation}\r\n            onCacheClick={this.handleCacheClick.bind(this)}\r\n          />\r\n        )}\r\n        {this.state.page == \"details\" && (\r\n          <Details cache={this.state.currentCache} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}